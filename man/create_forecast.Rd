% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_forecast.R
\name{create_forecast}
\alias{create_forecast}
\title{Create a forecast object}
\usage{
create_forecast(dat, name = NULL, forecast_time = NULL)
}
\arguments{
\item{dat}{Forecast data. It can be in one of the following formats:
\itemize{
\item A data frame containing forecast data
\item A named list with a \code{time} field (vector of times) and a \code{vals} field (list of realization vectors).
Each of the vectors in \code{vals} must have the same length as \code{time}
}

In the first option above, the data frame should contain:
\itemize{
\item A \code{time} column
\item (Optional) a \code{sim} column, containing simulation numbers for raw data
\item (Optional) a \code{val} column, containing raw data.
If \code{sim} is present then \code{val} must be present as well.
\item (Optional) columns starting with \code{val_q} followed by a number from 0 to 100, containing quantile data
\item (Optional) a \code{val_mean} column, containing mean data
}

Times can be either numeric, dates, or date-times. All data must be numeric.
\code{sim} must also be numeric if present.}

\item{name}{(Optional) A string specifying the name of the forecast}

\item{forecast_time}{(Optional) An integer, date, or date-time specifying when the forecast was created.
Its type should match the type of values in the \code{time} column(s) of \code{data}
If provided, this forecast will be scored only using data corresponding to dates/times greater than or equal to \code{forecast_time}.
Additionally, plots of this forecast may graphically distinguish between values to the left and right of \code{forecast_time}.}
}
\value{
A named list with fields \code{data}, \code{name}, \code{forecast_time}.
\code{data} is a data frame containing forecast data.
\code{name} and \code{forecast_time} are the same as the parameters passed to \code{create_forecast()}
}
\description{
\code{create_forecast()} creates a forecast object given data and optional metadata.
It accepts a variety of forecast formats as input and intelligently converts them into a standard format.
}
\examples{
# forecast with numeric times and raw data
create_forecast(data.frame(time=1:3, val=10:12), name="a forecast", forecast_time=2)

# forecast with dates and mean-and-quantiles data
create_forecast(
  data.frame(
    time=c(lubridate::ymd("2024-01-01"), lubridate::ymd("2024-01-02")),
    val_mean=10:11, val_q2.5=5:6, val_q97.5=15:16
  ),
  name="another forecast"
)

# an already-combined ensemble
create_forecast(dplyr::tibble(time=c(1,1,1,1,1,2,2,2,2,2), val=c(20,21,22,23,24,10,11,12,13,14)))

# an already-combined ensemble with simulation numbers
create_forecast(dplyr::tibble(time=c(1,1,1,1,1,2,2,2,2,2), sim=c(1,2,3,4,5,1,2,3,4,5), val=c(20,21,22,23,24,10,11,12,13,14)))

# an ensemble of 4 realizations, each represented by a vector in `vals`
create_forecast(list(
  time=1:3,
  vals=list(4:6, 7:9, 10:12, 13:15)
))
}
